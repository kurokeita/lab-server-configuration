version: "3.7"

name: "lab"

services:
  ###### Portainer #########
  portainer:
    image: portainer/portainer-ce:latest
    container_name: lab.portainer
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer/:/data
    networks:
      - lab

  ###### Uptime Kuma #########
  kuma:
    image: louislam/uptime-kuma:1
    container_name: lab.uptime_kuma
    restart: always
    volumes:
      - ./uptime_kuma:/app/data
    networks:
      - lab

  ###### Keycloak #########
  keycloak:
    container_name: lab.keycloak
    image: quay.io/keycloak/keycloak:22.0.4
    restart: always
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: ${KC_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KC_ADMIN_PASSWORD}
      KC_PROXY: edge
      KC_HTTP_ENABLED: true
      KC_DB: mariadb
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KC_DB_URL_HOST: ${KC_DB_HOST}
      KC_DB_URL_PORT: ${KC_DB_PORT}
      KC_HOSTNAME: keycloak.kurokeita.dev
    volumes:
      - ./keycloak_data:/opt/keycloak/data/
    command: start
    user: root
    depends_on:
      mariadb:
        condition: service_healthy
    networks:
      - lab

  ##### MariaDB #####
  mariadb:
    image: mariadb:10.6.16
    container_name: lab.mariadb
    healthcheck:
      test: healthcheck.sh --su-mysql --connect --innodb_initialized
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: always
    tty: true
    volumes:
      - ./.mariadb:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: lab
      MYSQL_USER: lab
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    networks:
      - lab

  ###### CloudFlare Tunnel #########
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: lab.tunnel
    restart: always
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    networks:
      - lab

  ###### ddclient for Dynamic DNS #########
  ddclient:
    image: lscr.io/linuxserver/ddclient:latest
    container_name: lab.ddclient
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./ddclient:/config
    restart: always
    networks:
      - lab

networks:
  lab:
    driver: bridge
